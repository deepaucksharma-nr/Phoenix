# Makefile for E2E Testing

.PHONY: help build-services start-e2e stop-e2e test-e2e clean-e2e logs-e2e

help: ## Show this help
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-20s\033[0m %s\n", $$1, $$2}'

build-services: ## Build all services locally
	@echo "Building API service..."
	cd services/api && go build -o bin/api ./cmd/api
	@echo "Building Controller service..."
	cd services/controller && go build -o bin/controller ./cmd/controller
	@echo "Building Generator service..."
	cd services/generator && go build -o bin/generator ./cmd/generator

start-e2e: ## Start E2E environment with docker-compose
	docker-compose -f docker-compose.e2e.yml up -d --build
	@echo "Waiting for services to be ready..."
	@sleep 10
	@echo "Services started. Check logs with: make logs-e2e"

stop-e2e: ## Stop E2E environment
	docker-compose -f docker-compose.e2e.yml down

logs-e2e: ## Show logs from E2E services
	docker-compose -f docker-compose.e2e.yml logs -f

test-e2e: ## Run E2E tests
	./scripts/e2e-test.sh

clean-e2e: ## Clean up E2E environment and volumes
	docker-compose -f docker-compose.e2e.yml down -v
	rm -f services/*/bin/*

quick-test: ## Quick local test without Docker
	@echo "Starting quick test..."
	# Start services in background
	cd services/api && go run ./cmd/api &
	cd services/controller && go run ./cmd/controller &
	cd services/generator && go run ./cmd/generator &
	@sleep 5
	# Test API
	@echo "Testing API health..."
	@curl -s http://localhost:8080/health | jq .
	@echo "Creating test experiment..."
	@curl -s -X POST http://localhost:8080/api/v1/experiments \
		-H "Content-Type: application/json" \
		-d '{"name":"test-exp","baseline_pipeline":"baseline-v1"}' | jq .
	# Kill background processes
	@pkill -f "go run ./cmd/api" || true
	@pkill -f "go run ./cmd/controller" || true
	@pkill -f "go run ./cmd/generator" || true