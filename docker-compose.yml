version: '3.8'

services:
  # Phoenix API - Consolidated control plane with WebSocket
  phoenix-api:
    build:
      context: .
      dockerfile: Dockerfile.phoenix-api
    ports:
      - "8080:8080"  # API and WebSocket on same port
    environment:
      - PORT=8080
      - DATABASE_URL=postgresql://phoenix:phoenix@postgres:5432/phoenix?sslmode=disable
      - PROMETHEUS_URL=http://prometheus:9090
      - PUSHGATEWAY_URL=http://pushgateway:9091
      - JWT_SECRET=development-secret
      - ENVIRONMENT=development
      - ENABLE_WEBSOCKET=true
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - prometheus
      - pushgateway
      - redis
    networks:
      - phoenix-network
    volumes:
      - ./projects/phoenix-api/migrations:/app/migrations:ro

  # Phoenix Agent - Data plane agent
  phoenix-agent:
    build:
      context: .
      dockerfile: Dockerfile.phoenix-agent
    environment:
      - PHOENIX_API_URL=http://phoenix-api:8080
      - PHOENIX_HOST_ID=local-agent-001
      - POLL_INTERVAL=15s
      - LOG_LEVEL=info
      - CONFIG_DIR=/etc/phoenix-agent
      - PUSHGATEWAY_URL=http://pushgateway:9091
      - OTEL_ENDPOINT=http://localhost:4318
      # Collector Configuration - Choose ONE:
      # Option 1: Standard OpenTelemetry Collector (default)
      - COLLECTOR_TYPE=otel
      # Option 2: New Relic Distribution of OpenTelemetry (NRDOT)
      # - COLLECTOR_TYPE=nrdot
      # - USE_NRDOT=true
      # - NEW_RELIC_LICENSE_KEY=${NEW_RELIC_LICENSE_KEY}
      # - NEW_RELIC_OTLP_ENDPOINT=${NEW_RELIC_OTLP_ENDPOINT:-otlp.nr-data.net:4317}
      # - MAX_CARDINALITY=10000
      # - REDUCTION_PERCENTAGE=70
    depends_on:
      - phoenix-api
    networks:
      - phoenix-network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./configs/otel-templates:/etc/otel-templates:ro
    privileged: true

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=phoenix
      - POSTGRES_PASSWORD=phoenix
      - POSTGRES_DB=phoenix
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - phoenix-network

  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - phoenix-network

  # Prometheus Pushgateway
  pushgateway:
    image: prom/pushgateway:latest
    ports:
      - "9091:9091"
    networks:
      - phoenix-network

  # Grafana (optional)
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"  # Changed to avoid conflict with dashboard
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - phoenix-network
  
  # Phoenix Dashboard (Development)
  phoenix-dashboard:
    build:
      context: ./projects/dashboard
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost:8080
      - VITE_WS_URL=ws://localhost:8081
      - NODE_ENV=development
    volumes:
      - ./projects/dashboard:/app
      - /app/node_modules
    depends_on:
      - phoenix-api
    networks:
      - phoenix-network

  # Redis (optional - for caching)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - phoenix-network

networks:
  phoenix-network:
    driver: bridge

volumes:
  postgres_data:
  prometheus_data:
  grafana_data: