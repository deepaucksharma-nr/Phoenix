# Phoenix Platform Migration Manifest v2.0
version: "2.0"
metadata:
  name: "Phoenix Platform Migration"
  description: "Complete migration from OLD_IMPLEMENTATION to monorepo structure"
  created_at: "2024-01-15"
  
requirements:
  tools:
    - name: "git"
      min_version: "2.25.0"
    - name: "go"
      min_version: "1.21"
    - name: "node"
      min_version: "18.0.0"
    - name: "docker"
      min_version: "20.10.0"
    - name: "make"
      min_version: "3.81"
  resources:
    disk_space_gb: 10
    memory_gb: 4
    
pre_flight_checks:
  - script: "scripts/migration/pre-flight-checks.sh"
    required: true
    stop_on_failure: true
    
phases:
  # Phase 0: Foundation Setup
  - id: "phase-0-foundation"
    name: "Foundation Setup"
    description: "Create base directory structure and workspace configuration"
    can_parallelize: false
    requires_exclusive_lock: true
    prerequisites:
      - "pre_flight_checks"
    operations:
      - name: "Create directory structure"
        script: "scripts/migration/phases/phase-0-foundation.sh"
      - name: "Setup workspace"
        script: "scripts/setup-workspace.sh"
    validations:
      - name: "directory_structure"
        command: "test -d services && test -d packages && test -d infrastructure"
      - name: "workspace_config"
        command: "test -f package.json && test -f turbo.json"
      - name: "makefile_exists"
        command: "test -f Makefile && make help"
    rollback:
      script: "scripts/migration/rollback/rollback-foundation.sh"
      
  # Phase 1: Shared Packages Migration
  - id: "phase-1-packages"
    name: "Shared Packages Migration"
    description: "Migrate shared code to packages directory"
    can_parallelize: true
    dependencies: ["phase-0-foundation"]
    parallel_groups:
      - name: "go-packages"
        components:
          - id: "go-common"
            source: "OLD_IMPLEMENTATION/phoenix-platform/pkg"
            target: "packages/go-common"
            type: "go"
          - id: "go-interfaces"
            source: "OLD_IMPLEMENTATION/phoenix-platform/pkg/interfaces"
            target: "packages/go-common/interfaces"
            type: "go"
      - name: "contracts"
        components:
          - id: "openapi"
            source: "OLD_IMPLEMENTATION/packages/contracts/openapi"
            target: "packages/contracts/openapi"
            type: "openapi"
          - id: "proto"
            source: "OLD_IMPLEMENTATION/phoenix-platform/api/proto"
            target: "packages/contracts/proto"
            type: "proto"
    validations:
      - name: "go_packages_build"
        command: "cd packages/go-common && go build ./..."
      - name: "go_packages_test"
        command: "cd packages/go-common && go test ./..."
        
  # Phase 2: Core Services
  - id: "phase-2-core-services"
    name: "Core Services Migration"
    description: "Migrate critical platform services"
    can_parallelize: true
    dependencies: ["phase-1-packages"]
    services:
      - id: "api-gateway"
        source: "OLD_IMPLEMENTATION/phoenix-platform/cmd/api-gateway"
        type: "go"
        critical: true
        validations:
          - "build"
          - "unit_test"
          - "docker_build"
      - id: "control-service"
        source: "OLD_IMPLEMENTATION/phoenix-platform/cmd/control-service"
        type: "go"
        critical: true
      - id: "controller"
        source: "OLD_IMPLEMENTATION/phoenix-platform/cmd/controller"
        type: "go"
        critical: true
      - id: "dashboard"
        source: "OLD_IMPLEMENTATION/phoenix-platform/dashboard"
        type: "react"
        critical: true
        validations:
          - "npm_install"
          - "build"
          - "test"
          
  # Phase 3: Supporting Services
  - id: "phase-3-support-services"
    name: "Supporting Services Migration"
    description: "Migrate supporting and auxiliary services"
    can_parallelize: true
    dependencies: ["phase-2-core-services"]
    services:
      - id: "analytics"
        source: "OLD_IMPLEMENTATION/services/analytics"
        type: "go"
      - id: "benchmark"
        source: "OLD_IMPLEMENTATION/services/benchmark"
        type: "go"
      - id: "collector"
        source: "OLD_IMPLEMENTATION/services/collector"
        type: "node"
      - id: "anomaly-detector"
        source: "OLD_IMPLEMENTATION/apps/anomaly-detector"
        type: "go"
      - id: "control-actuator-go"
        source: "OLD_IMPLEMENTATION/apps/control-actuator-go"
        type: "go"
        
  # Phase 4: Operators and Tools
  - id: "phase-4-operators"
    name: "Operators and Tools Migration"
    description: "Migrate Kubernetes operators and CLI tools"
    can_parallelize: true
    dependencies: ["phase-3-support-services"]
    components:
      - id: "phoenix-cli"
        source: "OLD_IMPLEMENTATION/phoenix-platform/cmd/phoenix-cli"
        target: "services/phoenix-cli"
        type: "go"
      - id: "loadsim-operator"
        source: "OLD_IMPLEMENTATION/phoenix-platform/operators/loadsim"
        target: "services/loadsim-operator"
        type: "go"
      - id: "pipeline-operator"
        source: "OLD_IMPLEMENTATION/phoenix-platform/operators/pipeline"
        target: "services/pipeline-operator"
        type: "go"
        
  # Phase 5: Infrastructure and Configuration
  - id: "phase-5-infrastructure"
    name: "Infrastructure Migration"
    description: "Migrate Kubernetes, Docker, and monitoring configurations"
    can_parallelize: false
    dependencies: ["phase-4-operators"]
    operations:
      - name: "kubernetes_manifests"
        script: "scripts/migration/phases/migrate-kubernetes.sh"
      - name: "helm_charts"
        script: "scripts/migration/phases/migrate-helm.sh"
      - name: "docker_configs"
        script: "scripts/migration/phases/migrate-docker.sh"
      - name: "monitoring_configs"
        script: "scripts/migration/phases/migrate-monitoring.sh"
    validations:
      - name: "kubernetes_validation"
        command: "kubectl --dry-run=client apply -f infrastructure/kubernetes/base/"
      - name: "helm_validation"
        command: "helm lint infrastructure/helm/phoenix"
        
  # Phase 6: Integration and Testing
  - id: "phase-6-integration"
    name: "Integration Testing"
    description: "Validate all services work together"
    can_parallelize: false
    dependencies: ["phase-5-infrastructure"]
    operations:
      - name: "update_imports"
        script: "scripts/migration/phases/update-all-imports.sh"
      - name: "build_all"
        command: "make build"
      - name: "test_all"
        command: "make test"
    validations:
      - name: "integration_tests"
        command: "make test-integration"
        timeout: 1800
      - name: "e2e_tests"
        command: "make test-e2e"
        timeout: 3600
        
  # Phase 7: Finalization
  - id: "phase-7-finalization"
    name: "Finalization"
    description: "Clean up and finalize migration"
    can_parallelize: false
    dependencies: ["phase-6-integration"]
    operations:
      - name: "cleanup_migration_files"
        script: "scripts/migration/phases/cleanup.sh"
      - name: "generate_reports"
        script: "scripts/migration/phases/generate-final-report.sh"
      - name: "update_documentation"
        script: "scripts/migration/phases/update-docs.sh"
    validations:
      - name: "no_old_references"
        command: "! grep -r 'OLD_IMPLEMENTATION' --exclude-dir=.git --exclude-dir=OLD_IMPLEMENTATION ."
      - name: "all_services_healthy"
        command: "docker-compose ps | grep -E '(healthy|running)'"
        
post_migration:
  - name: "backup_old_implementation"
    script: "scripts/migration/post/backup-old.sh"
  - name: "commit_changes"
    script: "scripts/migration/post/commit-migration.sh"
  - name: "tag_release"
    script: "scripts/migration/post/tag-release.sh"
    
rollback:
  strategy: "phase_based"
  scripts:
    - "scripts/migration/rollback/rollback-controller.sh"
    
reporting:
  output_dir: ".migration/reports"
  formats: ["markdown", "json", "html"]
  include:
    - "migration_summary"
    - "phase_details"
    - "validation_results"
    - "performance_comparison"
    - "file_inventory"