# Prometheus Stack for Phoenix Lean Architecture
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: phoenix-system
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
    
    scrape_configs:
      # Scrape Pushgateway for experiment metrics
      - job_name: 'pushgateway'
        honor_labels: true
        static_configs:
          - targets: ['prometheus-pushgateway:9091']
      
      # Scrape Phoenix API metrics
      - job_name: 'phoenix-api'
        static_configs:
          - targets: ['phoenix-api:8080']
        metrics_path: '/metrics'
      
      # Scrape kube-state-metrics for cluster info
      - job_name: 'kube-state-metrics'
        static_configs:
          - targets: ['kube-state-metrics:8080']
    
    # Remote write to long-term storage (optional)
    # remote_write:
    #   - url: "http://thanos-receive:19291/api/v1/receive"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: phoenix-system
  labels:
    app: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      serviceAccountName: prometheus
      containers:
      - name: prometheus
        image: prom/prometheus:v2.45.0
        args:
          - '--config.file=/etc/prometheus/prometheus.yml'
          - '--storage.tsdb.path=/prometheus/'
          - '--web.console.libraries=/usr/share/prometheus/console_libraries'
          - '--web.console.templates=/usr/share/prometheus/consoles'
          - '--web.enable-lifecycle'
          - '--storage.tsdb.retention.time=7d'
        ports:
        - containerPort: 9090
          name: http
        volumeMounts:
        - name: config
          mountPath: /etc/prometheus
        - name: storage
          mountPath: /prometheus
        resources:
          requests:
            cpu: 500m
            memory: 2Gi
          limits:
            cpu: 2000m
            memory: 8Gi
      volumes:
      - name: config
        configMap:
          name: prometheus-config
      - name: storage
        persistentVolumeClaim:
          claimName: prometheus-storage
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: phoenix-system
spec:
  type: ClusterIP
  ports:
  - port: 9090
    targetPort: http
  selector:
    app: prometheus
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-storage
  namespace: phoenix-system
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
---
# Prometheus Pushgateway
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-pushgateway
  namespace: phoenix-system
  labels:
    app: prometheus-pushgateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus-pushgateway
  template:
    metadata:
      labels:
        app: prometheus-pushgateway
    spec:
      containers:
      - name: pushgateway
        image: prom/pushgateway:v1.6.2
        ports:
        - containerPort: 9091
          name: http
        args:
          - '--persistence.file=/data/pushgateway.data'
          - '--persistence.interval=5m'
        volumeMounts:
        - name: storage
          mountPath: /data
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
      volumes:
      - name: storage
        persistentVolumeClaim:
          claimName: pushgateway-storage
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-pushgateway
  namespace: phoenix-system
spec:
  type: ClusterIP
  ports:
  - port: 9091
    targetPort: http
  selector:
    app: prometheus-pushgateway
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pushgateway-storage
  namespace: phoenix-system
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
# Service Account and RBAC for Prometheus
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: phoenix-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
rules:
- apiGroups: [""]
  resources:
  - nodes
  - nodes/proxy
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources:
  - configmaps
  verbs: ["get"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
- kind: ServiceAccount
  name: prometheus
  namespace: phoenix-system