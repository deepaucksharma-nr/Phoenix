# Phoenix Platform - Pre-commit hooks configuration
# These hooks run automatically before each commit to ensure code quality

repos:
  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        exclude: \.md$
      - id: end-of-file-fixer
      - id: check-yaml
        args: ['--unsafe']
      - id: check-json
      - id: check-toml
      - id: check-merge-conflict
      - id: detect-private-key
      - id: no-commit-to-branch
        args: [--branch, main, --branch, master]
      - id: check-case-conflict
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: mixed-line-ending
        args: ['--fix=lf']

  # Go specific hooks
  - repo: https://github.com/golangci/golangci-lint
    rev: v1.55.2
    hooks:
      - id: golangci-lint
        args: ['--fix']

  # Go imports formatting
  - repo: https://github.com/golangci/golangci-lint
    rev: v1.55.2
    hooks:
      - id: golangci-lint
        name: goimports
        entry: goimports -w
        files: \.go$
        language: system
        pass_filenames: true

  # Dockerfile linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint
        args: ['--ignore', 'DL3008', '--ignore', 'DL3009']

  # YAML linting
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.33.0
    hooks:
      - id: yamllint
        args: ['-c', '.yamllint.yml']

  # Security scanning
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']

  # Markdown linting
  - repo: https://github.com/markdownlint/markdownlint
    rev: v0.13.0
    hooks:
      - id: markdownlint
        args: ['-c', '.markdownlint.yml']

  # License header check
  - repo: https://github.com/Lucas-C/pre-commit-hooks
    rev: v1.5.4
    hooks:
      - id: insert-license
        name: Add license header to Go files
        files: \.go$
        args:
          - --license-filepath
          - .license-header.txt
          - --comment-style
          - //

  # Custom Phoenix-specific hooks
  - repo: local
    hooks:
      # Validate repository structure
      - id: validate-structure
        name: Validate Repository Structure
        entry: ./build/scripts/utils/validate-structure.sh
        language: script
        pass_filenames: false
        always_run: true

      # Validate Go workspace
      - id: validate-go-workspace
        name: Validate Go Workspace
        entry: bash -c 'go work sync && git diff --exit-code go.work.sum'
        language: system
        pass_filenames: false
        files: (go\.mod|go\.work)$

      # Check project boundaries
      - id: check-project-boundaries
        name: Check Project Boundaries
        entry: ./tools/analyzers/boundary-check.sh
        language: script
        pass_filenames: false
        always_run: true

      # Validate no direct cross-project imports
      - id: check-imports
        name: Check Import Violations
        entry: ./tools/analyzers/import-check.sh
        language: script
        files: \.go$

      # Ensure all projects have required files
      - id: check-project-requirements
        name: Check Project Requirements
        entry: ./tools/analyzers/project-requirements.sh
        language: script
        pass_filenames: false
        always_run: true

      # Validate API contracts
      - id: validate-api-contracts
        name: Validate API Contracts
        entry: ./tools/analyzers/contract-validator.sh
        language: script
        files: (\.proto|\.yaml|\.json)$
        
      # Check for LLM-generated anomalies
      - id: llm-safety-check
        name: LLM Safety Check
        entry: ./tools/analyzers/llm-safety-check.sh
        language: script
        pass_filenames: true
        always_run: false

      # Prevent commits to old implementation
      - id: no-old-implementation
        name: No Old Implementation
        entry: bash -c '! git diff --cached --name-only | grep -q "^OLD_IMPLEMENTATION/"'
        language: system
        pass_filenames: false
        always_run: true