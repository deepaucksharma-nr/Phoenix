apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "phoenix.fullname" . }}-api
  labels:
    {{- include "phoenix.labels" . | nindent 4 }}
    app.kubernetes.io/component: api
spec:
  {{- if not .Values.api.autoscaling.enabled }}
  replicas: {{ .Values.api.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "phoenix.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: api
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/api-configmap.yaml") . | sha256sum }}
      labels:
        {{- include "phoenix.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: api
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "phoenix.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: api
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.api.image.repository }}:{{ .Values.api.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.api.image.pullPolicy }}
          ports:
            - name: grpc
              containerPort: {{ .Values.api.grpc.port | default 5050 }}
              protocol: TCP
            - name: http
              containerPort: {{ .Values.api.service.httpPort | default 8080 }}
              protocol: TCP
            - name: metrics
              containerPort: {{ .Values.api.metrics.port | default 9090 }}
              protocol: TCP
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ include "phoenix.fullname" . }}-postgresql
                  key: url
            {{- if .Values.api.auth.useSecretRef }}
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.api.auth.secretName | default (include "phoenix.fullname" .) }}
                  key: {{ .Values.api.auth.secretKey | default "jwt-secret" }}
            {{- end }}
          resources:
            {{- toYaml .Values.api.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: {{ .Values.api.probes.liveness.path | default "/health" }}
              port: http
            initialDelaySeconds: {{ .Values.api.probes.liveness.initialDelaySeconds | default 30 }}
            periodSeconds: {{ .Values.api.probes.liveness.periodSeconds | default 10 }}
          readinessProbe:
            httpGet:
              path: {{ .Values.api.probes.readiness.path | default "/ready" }}
              port: http
            initialDelaySeconds: {{ .Values.api.probes.readiness.initialDelaySeconds | default 5 }}
            periodSeconds: {{ .Values.api.probes.readiness.periodSeconds | default 10 }}
                  key: database-url
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "phoenix.fullname" . }}-auth
                  key: jwt-secret
            - name: NEW_RELIC_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.newrelic.apiKey.secretName }}
                  key: {{ .Values.newrelic.apiKey.key }}
            - name: NEW_RELIC_OTLP_ENDPOINT
              value: {{ .Values.newrelic.endpoint }}
            - name: LOG_LEVEL
              value: {{ .Values.api.logLevel | default "info" }}
            - name: ENVIRONMENT
              value: {{ .Values.api.environment | default "production" }}
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
          resources:
            {{- toYaml .Values.api.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /etc/phoenix
              readOnly: true
      volumes:
        - name: config
          configMap:
            name: {{ include "phoenix.fullname" . }}-api
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}