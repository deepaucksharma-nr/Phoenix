# Phoenix-vNext Helm Chart Values
# Default values for phoenix-vnext deployment

# Global configuration
global:
  # Cloud provider: aws, azure, gcp, or local
  cloudProvider: "local"
  region: "us-west-2"
  environment: "development"
  
  # Image configuration
  imageRegistry: ""
  imagePullPolicy: IfNotPresent
  imagePullSecrets: []
  
  # Security context
  securityContext:
    runAsNonRoot: true
    runAsUser: 65534
    fsGroup: 65534

# OpenTelemetry Collector (Main)
collector:
  enabled: true
  replicaCount: 2
  
  image:
    repository: otel/opentelemetry-collector-contrib
    tag: "0.103.1"
    pullPolicy: IfNotPresent
  
  # Resource configuration
  resources:
    limits:
      cpu: 1000m
      memory: 2Gi
    requests:
      cpu: 500m
      memory: 1Gi
  
  # Service configuration
  service:
    type: ClusterIP
    ports:
      otlpGrpc: 4317
      otlpHttp: 4318
      metricsFull: 8888
      metricsOpt: 8889
      metricsExp: 8890
      health: 13133
  
  # Service account
  serviceAccount:
    create: true
    name: ""
    annotations: {}
  
  # Node selection
  nodeSelector: {}
  tolerations: []
  affinity: {}
  
  # Configuration
  config:
    # Will be populated from configmap
    existingConfigMap: ""

# OpenTelemetry Collector (Observer)
observer:
  enabled: true
  replicaCount: 1
  
  image:
    repository: otel/opentelemetry-collector-contrib
    tag: "0.103.1"
    pullPolicy: IfNotPresent
  
  resources:
    limits:
      cpu: 200m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 256Mi
  
  service:
    type: ClusterIP
    ports:
      metrics: 9888
      health: 13133

# Control Actuator
controlActuator:
  enabled: true
  replicaCount: 1
  
  image:
    repository: phoenix/control-actuator-go
    tag: "latest"
    pullPolicy: IfNotPresent
  
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi
  
  service:
    type: ClusterIP
    port: 8081
  
  # Environment variables
  env:
    logLevel: "info"
    controllerInterval: 60
    stabilityPeriod: 120

# Anomaly Detector
anomalyDetector:
  enabled: true
  replicaCount: 1
  
  image:
    repository: phoenix/anomaly-detector
    tag: "latest"
    pullPolicy: IfNotPresent
  
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi
  
  service:
    type: ClusterIP
    port: 8082

# Benchmark Controller
benchmark:
  enabled: true
  replicaCount: 1
  
  image:
    repository: phoenix/benchmark-controller
    tag: "latest"
    pullPolicy: IfNotPresent
  
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 200m
      memory: 256Mi
  
  service:
    type: ClusterIP
    port: 8083

# Synthetic Generator
syntheticGenerator:
  enabled: false  # Only enabled when needed for testing
  replicaCount: 1
  
  image:
    repository: phoenix/synthetic-generator
    tag: "latest"
    pullPolicy: IfNotPresent
  
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi
  
  # Load generation settings
  env:
    processCountPerHost: 250
    hostCount: 3
    emitInterval: 15

# Monitoring Stack
monitoring:
  enabled: true
  namespace: "phoenix-monitoring"
  
  # Prometheus
  prometheus:
    enabled: true
    replicaCount: 1
    
    image:
      repository: prom/prometheus
      tag: "v2.47.0"
      pullPolicy: IfNotPresent
    
    resources:
      limits:
        cpu: 1000m
        memory: 2Gi
      requests:
        cpu: 500m
        memory: 1Gi
    
    storage:
      size: 50Gi
      storageClass: ""
    
    retention: "30d"
    
    service:
      type: ClusterIP
      port: 9090
    
    # External access
    ingress:
      enabled: false
      className: ""
      annotations: {}
      hosts: []
      tls: []
  
  # Grafana
  grafana:
    enabled: true
    replicaCount: 1
    
    image:
      repository: grafana/grafana
      tag: "10.1.1"
      pullPolicy: IfNotPresent
    
    resources:
      limits:
        cpu: 500m
        memory: 1Gi
      requests:
        cpu: 200m
        memory: 512Mi
    
    storage:
      size: 10Gi
      storageClass: ""
    
    service:
      type: ClusterIP
      port: 3000
    
    # Admin credentials
    adminUser: admin
    adminPassword: admin
    
    # External access
    ingress:
      enabled: false
      className: ""
      annotations: {}
      hosts: []
      tls: []

# Configuration Management
config:
  # Create ConfigMaps for collector configurations
  createConfigMaps: true
  
  # Control configuration
  control:
    optimizationProfile: "balanced"
    thresholds:
      conservativeMaxTs: 15000
      aggressiveMinTs: 25000
    targetTsCount: 20000

# Storage
storage:
  # Default storage class for all PVCs
  storageClass: ""
  
  # Individual storage configurations
  prometheus:
    size: 50Gi
    storageClass: ""
  
  grafana:
    size: 10Gi
    storageClass: ""

# Network Policies
networkPolicy:
  enabled: false
  ingress: []
  egress: []

# Pod Security Policy
podSecurityPolicy:
  enabled: false

# New Relic Integration
newRelic:
  enabled: false
  licenseKey: ""
  endpoint: "https://otlp.nr-data.net:4317"
  
  # Which pipelines to export
  exports:
    full: false
    optimized: false
    experimental: false

# Cloud-specific configurations
aws:
  # EKS-specific settings
  region: "us-west-2"
  loadBalancer:
    type: "nlb"
    scheme: "internal"
  storageClass: "gp3-csi"
  
  # ECR configuration
  ecr:
    region: "us-west-2"
    accountId: ""

azure:
  # AKS-specific settings
  region: "eastus"
  loadBalancer:
    type: "internal"
  storageClass: "managed-csi"
  
  # ACR configuration
  acr:
    loginServer: ""

# Autoscaling
autoscaling:
  enabled: false
  
  # HPA configuration
  hpa:
    minReplicas: 2
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80
  
  # VPA configuration  
  vpa:
    enabled: false
    updateMode: "Auto"

# Pod Disruption Budget
podDisruptionBudget:
  enabled: true
  minAvailable: 1
  maxUnavailable: ""

# Service Monitor for Prometheus Operator
serviceMonitor:
  enabled: false
  namespace: ""
  labels: {}
  interval: 30s
  scrapeTimeout: 10s

# Tests
tests:
  enabled: true
  image:
    repository: busybox
    tag: "1.35"
  resources:
    limits:
      cpu: 100m
      memory: 128Mi