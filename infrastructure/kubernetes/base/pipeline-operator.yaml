apiVersion: apps/v1
kind: Deployment
metadata:
  name: pipeline-operator
  namespace: phoenix-system
  labels:
    app.kubernetes.io/name: pipeline-operator
    app.kubernetes.io/component: operator
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: pipeline-operator
      app.kubernetes.io/component: operator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: pipeline-operator
        app.kubernetes.io/component: operator
    spec:
      serviceAccountName: pipeline-operator
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: operator
        image: phoenix/pipeline-operator:latest
        imagePullPolicy: IfNotPresent
        command:
        - /manager
        args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8080
        - --leader-elect
        ports:
        - name: metrics
          containerPort: 8080
          protocol: TCP
        - name: health
          containerPort: 8081
          protocol: TCP
        env:
        - name: WATCH_NAMESPACE
          value: "" # Watch all namespaces
        - name: LOG_LEVEL
          value: "info"
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
        livenessProbe:
          httpGet:
            path: /healthz
            port: health
          initialDelaySeconds: 15
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /readyz
            port: health
          initialDelaySeconds: 10
          periodSeconds: 10
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          capabilities:
            drop:
            - ALL
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pipeline-operator
  namespace: phoenix-system
  labels:
    app.kubernetes.io/name: pipeline-operator
    app.kubernetes.io/component: operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pipeline-operator
rules:
# Phoenix CRDs
- apiGroups: ["phoenix.io"]
  resources: ["phoenixprocesspipelines", "phoenixprocesspipelines/status", "phoenixprocesspipelines/finalizers"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
# Core resources
- apiGroups: [""]
  resources: ["configmaps", "services"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["apps"]
  resources: ["daemonsets"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
# Leader election
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: pipeline-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: pipeline-operator
subjects:
- kind: ServiceAccount
  name: pipeline-operator
  namespace: phoenix-system