apiVersion: v1
kind: ConfigMap
metadata:
  name: phoenix-config
  namespace: phoenix-system
  labels:
    app.kubernetes.io/name: phoenix
    app.kubernetes.io/component: config
data:
  # Global configuration
  log-level: "info"
  metrics-port: "8081"
  health-port: "8082"
  
  # Service discovery
  api-gateway-url: "http://api-gateway:8080"
  experiment-controller-url: "experiment-controller:50051"
  config-generator-url: "config-generator:50052"
  
  # Database configuration (non-sensitive)
  db-host: "postgres"
  db-port: "5432"
  db-name: "phoenix"
  db-ssl-mode: "require"
  
  # Feature flags
  enable-auth: "true"
  enable-metrics: "true"
  enable-tracing: "false"
  enable-profiling: "false"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pipeline-templates
  namespace: phoenix-system
  labels:
    app.kubernetes.io/name: phoenix
    app.kubernetes.io/component: templates
data:
  process-baseline-v1.yaml: |
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: otel-collector-config
    data:
      collector.yaml: |
        receivers:
          hostmetrics:
            collection_interval: 30s
            scrapers:
              process:
                include:
                  match_type: regexp
                  names: [".*"]
                mute_process_name_error: true
        
        processors:
          batch:
            timeout: 10s
            send_batch_size: 1024
        
        exporters:
          prometheus:
            endpoint: "0.0.0.0:9090"
            namespace: baseline
        
        service:
          pipelines:
            metrics:
              receivers: [hostmetrics]
              processors: [batch]
              exporters: [prometheus]
  
  process-intelligent-v1.yaml: |
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: otel-collector-config
    data:
      collector.yaml: |
        receivers:
          hostmetrics:
            collection_interval: 30s
            scrapers:
              process:
                include:
                  match_type: regexp
                  names: [".*"]
                mute_process_name_error: true
        
        processors:
          batch:
            timeout: 10s
            send_batch_size: 1024
          
          filter/priority:
            metrics:
              include:
                match_type: expr
                expressions:
                - 'attributes["process.priority"] >= 15'
          
          transform/reduce:
            metric_statements:
            - context: datapoint
              statements:
              - set(attributes["process.group"], attributes["process.executable.name"])
              - delete_key(attributes, "process.command_line")
          
          groupbyattrs:
            keys:
            - process.group
            - process.owner
        
        exporters:
          prometheus:
            endpoint: "0.0.0.0:9090"
            namespace: intelligent
        
        service:
          pipelines:
            metrics:
              receivers: [hostmetrics]
              processors: [batch, filter/priority, transform/reduce, groupbyattrs]
              exporters: [prometheus]