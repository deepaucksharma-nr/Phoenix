// Code generated by protoc-gen-go. DO NOT EDIT.
// This is a stub file for the build to work

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
)

// ExperimentServiceServer is the server API for ExperimentService service.
type ExperimentServiceServer interface {
	CreateExperiment(context.Context, *CreateExperimentRequest) (*CreateExperimentResponse, error)
	GetExperiment(context.Context, *GetExperimentRequest) (*GetExperimentResponse, error)
	ListExperiments(context.Context, *ListExperimentsRequest) (*ListExperimentsResponse, error)
	UpdateExperiment(context.Context, *UpdateExperimentRequest) (*Experiment, error)
	DeleteExperiment(context.Context, *DeleteExperimentRequest) (*DeleteExperimentResponse, error)
	GetExperimentStatus(context.Context, *GetExperimentStatusRequest) (*ExperimentStatus, error)
}

// UnimplementedExperimentServiceServer for forward compatibility
type UnimplementedExperimentServiceServer struct{}

// RegisterExperimentServiceServer registers the service
func RegisterExperimentServiceServer(s grpc.ServiceRegistrar, srv ExperimentServiceServer) {
	// TODO: Implement proper registration
}

// Request/Response types (stubs)
type CreateExperimentRequest struct {
	Name              string            `json:"name"`
	Description       string            `json:"description"`
	BaselinePipeline  string            `json:"baseline_pipeline"`
	CandidatePipeline string            `json:"candidate_pipeline"`
	TargetNodes       map[string]string `json:"target_nodes"`
}

type CreateExperimentResponse struct {
	Experiment *Experiment `json:"experiment"`
}

type GetExperimentRequest struct {
	Id string `json:"id"`
}

type GetExperimentResponse struct {
	Experiment *Experiment `json:"experiment"`
}

type ListExperimentsRequest struct {
	PageSize  int32  `json:"page_size"`
	PageToken string `json:"page_token"`
}

type ListExperimentsResponse struct {
	Experiments   []*Experiment `json:"experiments"`
	NextPageToken string        `json:"next_page_token"`
}

type UpdateExperimentRequest struct {
	Experiment *Experiment `json:"experiment"`
}

type DeleteExperimentRequest struct {
	Id string `json:"id"`
}

type DeleteExperimentResponse struct{}

type GetExperimentStatusRequest struct {
	Id string `json:"id"`
}

// Core types
type Experiment struct {
	Id                string            `json:"id"`
	Name              string            `json:"name"`
	Description       string            `json:"description"`
	BaselinePipeline  string            `json:"baseline_pipeline"`
	CandidatePipeline string            `json:"candidate_pipeline"`
	Status            string            `json:"status"`
	TargetNodes       map[string]string `json:"target_nodes"`
	CreatedAt         int64             `json:"created_at"`
	UpdatedAt         int64             `json:"updated_at"`
	StartedAt         int64             `json:"started_at"`
	CompletedAt       int64             `json:"completed_at"`
}

type ExperimentStatus struct {
	Status  string `json:"status"`
	Message string `json:"message"`
}

// RegisterExperimentServiceHandlerFromEndpoint is a stub
func RegisterExperimentServiceHandlerFromEndpoint(ctx context.Context, mux interface{}, endpoint string, opts []grpc.DialOption) error {
	// TODO: Implement
	return nil
}