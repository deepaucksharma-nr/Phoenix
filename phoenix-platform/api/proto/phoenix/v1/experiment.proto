syntax = "proto3";

package phoenix.v1;

option go_package = "github.com/phoenix/platform/pkg/api/v1;v1";

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

// ExperimentService manages A/B testing experiments
service ExperimentService {
  // Create a new experiment
  rpc CreateExperiment(CreateExperimentRequest) returns (CreateExperimentResponse);
  
  // Get an experiment by ID
  rpc GetExperiment(GetExperimentRequest) returns (GetExperimentResponse);
  
  // List experiments with optional filtering
  rpc ListExperiments(ListExperimentsRequest) returns (ListExperimentsResponse);
  
  // Update an existing experiment
  rpc UpdateExperiment(UpdateExperimentRequest) returns (Experiment);
  
  // Delete an experiment
  rpc DeleteExperiment(DeleteExperimentRequest) returns (DeleteExperimentResponse);
  
  // Get the status of an experiment
  rpc GetExperimentStatus(GetExperimentStatusRequest) returns (ExperimentStatus);
}

// Experiment represents an A/B testing experiment
message Experiment {
  string id = 1;
  string name = 2;
  string description = 3;
  string baseline_pipeline = 4;
  string candidate_pipeline = 5;
  string status = 6;
  map<string, string> target_nodes = 7;
  int64 created_at = 8;
  int64 updated_at = 9;
  int64 started_at = 10;
  int64 completed_at = 11;
  ExperimentConfig config = 12;
  map<string, string> metadata = 13;
}

// ExperimentConfig contains configuration for an experiment
message ExperimentConfig {
  int64 duration_seconds = 1;
  TrafficSplit traffic_split = 2;
  SuccessCriteria success_criteria = 3;
  string load_profile = 4;
  map<string, string> pipeline_variables = 5;
}

// TrafficSplit defines traffic distribution
message TrafficSplit {
  int32 baseline_percentage = 1;
  int32 candidate_percentage = 2;
}

// SuccessCriteria defines success metrics
message SuccessCriteria {
  double min_cardinality_reduction = 1;
  double max_latency_increase = 2;
  double max_error_rate = 3;
  double critical_process_coverage = 4;
}

// Request/Response messages
message CreateExperimentRequest {
  string name = 1;
  string description = 2;
  string baseline_pipeline = 3;
  string candidate_pipeline = 4;
  map<string, string> target_nodes = 5;
  ExperimentConfig config = 6;
}

message CreateExperimentResponse {
  Experiment experiment = 1;
}

message GetExperimentRequest {
  string id = 1;
}

message GetExperimentResponse {
  Experiment experiment = 1;
}

message ListExperimentsRequest {
  int32 page_size = 1;
  string page_token = 2;
  repeated string status_filter = 3;
}

message ListExperimentsResponse {
  repeated Experiment experiments = 1;
  string next_page_token = 2;
}

message UpdateExperimentRequest {
  Experiment experiment = 1;
  // Field mask would go here in production
}

message DeleteExperimentRequest {
  string id = 1;
}

message DeleteExperimentResponse {
  // Empty for now
}

message GetExperimentStatusRequest {
  string id = 1;
}

message ExperimentStatus {
  string status = 1;
  string message = 2;
  google.protobuf.Timestamp last_updated = 3;
}