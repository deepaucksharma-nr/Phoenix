# Simplified Synthetic Metrics Collector Configuration
# Compatible with otel/opentelemetry-collector-contrib:0.103.0

receivers:
  # Get metrics from main collector
  prometheus/main_collector:
    config:
      scrape_configs:
        - job_name: 'otelcol-main-metrics'
          scrape_interval: 5s
          static_configs:
            - targets: ['otelcol-main:8888']
            
  # Basic hostmetrics for system baseline
  hostmetrics:
    collection_interval: 10s
    scrapers:
      cpu: {}
      memory: {}
      load: {}

processors:
  # Basic resource detection
  resourcedetection:
    detectors: [env]
    timeout: 2s
    
  # Add synthetic metrics tags
  resource/synthetic:
    attributes:
      - key: service.name
        value: "phoenix-synthetic-generator"
        action: insert
      - key: benchmark.component
        value: "synthetic-metrics"
        action: insert
      - key: pipeline.simulation
        value: "true"
        action: insert
  
  batch:
    send_batch_size: 1000
    timeout: 10s

exporters:
  # Export metrics for consumption
  prometheus:
    endpoint: "0.0.0.0:9999"
    metric_expiration: 30m
    
  # Send to main collector for processing
  otlp/to_main:
    endpoint: http://otelcol-main:4317
    tls:
      insecure: true
    
  debug:
    verbosity: basic

extensions:
  health_check:
    endpoint: 0.0.0.0:13133
    
  pprof:
    endpoint: 0.0.0.0:1777

service:
  extensions: [health_check, pprof]
  
  pipelines:
    metrics:
      receivers: [hostmetrics, prometheus/main_collector]
      processors: [resourcedetection, resource/synthetic, batch]
      exporters: [prometheus, otlp/to_main, debug]

  telemetry:
    logs:
      level: info
    metrics:
      address: 0.0.0.0:8899