receivers:
  # Simple receiver to expose metrics endpoint
  prometheus:
    config:
      scrape_configs:
        - job_name: 'self'
          scrape_interval: 5s
          static_configs:
            - targets: ['0.0.0.0:9999']
  
  # Get metrics from main collector
  prometheus/main_collector:
    config:
      scrape_configs:
        - job_name: 'otelcol-main-metrics'
          scrape_interval: 5s
          static_configs:
            - targets: ['otelcol-main:8888']
            
  # Basic hostmetrics for system baseline
  hostmetrics:
    collection_interval: 10s
    scrapers:
      cpu: {}
      memory: {}
      load: {}

processors:
  # Basic resource detection
  resourcedetection:
    detectors: [env]
    timeout: 2s
    
  # Create fixed metrics with metricstransform
  metricstransform/timeseries:
    transforms:
      # Base metrics from CPU for time series counts
      - include: "system\\.cpu\\..*"
        match_type: regexp
        action: insert
        new_name: phoenix_ts_count_full
        operations:
          - action: aggregate_labels
            aggregation_type: sum
            label_set: []
          - action: experimental_scale_value
            experimental_scale: 250

      - include: "system\\.cpu\\..*"
        match_type: regexp
        action: insert
        new_name: phoenix_ts_count_opt_moderate
        operations:
          - action: aggregate_labels
            aggregation_type: sum
            label_set: []
          - action: experimental_scale_value
            experimental_scale: 150
          
      - include: "system\\.cpu\\..*"
        match_type: regexp
        action: insert
        new_name: phoenix_ts_count_opt_ultra
        operations:
          - action: aggregate_labels
            aggregation_type: sum
            label_set: []
          - action: experimental_scale_value
            experimental_scale: 50
            
      - include: "system\\.cpu\\..*"
        match_type: regexp
        action: insert
        new_name: phoenix_ts_count_exp
        operations:
          - action: aggregate_labels
            aggregation_type: sum
            label_set: []
          - action: experimental_scale_value
            experimental_scale: 100
            
      - include: "system\\.cpu\\..*"
        match_type: regexp
        action: insert
        new_name: phoenix_ts_count_hybrid
        operations:
          - action: aggregate_labels
            aggregation_type: sum
            label_set: []
          - action: experimental_scale_value
            experimental_scale: 125
  
  # Pipeline metrics        
  metricstransform/pipelines:
    transforms:
      - include: "system\\.cpu\\..*"
        match_type: regexp
        action: insert
        new_name: phoenix_pipeline_full
        operations:
          - action: aggregate_labels
            aggregation_type: sum
            label_set: []
          - action: experimental_scale_value
            experimental_scale: 100
            
      - include: "system\\.cpu\\..*"
        match_type: regexp
        action: insert
        new_name: phoenix_pipeline_opt_moderate
        operations:
          - action: aggregate_labels
            aggregation_type: sum
            label_set: []
          - action: experimental_scale_value
            experimental_scale: 75
            
      - include: "system\\.cpu\\..*"
        match_type: regexp
        action: insert
        new_name: phoenix_pipeline_opt_ultra
        operations:
          - action: aggregate_labels
            aggregation_type: sum
            label_set: []
          - action: experimental_scale_value
            experimental_scale: 25
            
      - include: "system\\.cpu\\..*"
        match_type: regexp
        action: insert
        new_name: phoenix_pipeline_exp
        operations:
          - action: aggregate_labels
            aggregation_type: sum
            label_set: []
          - action: experimental_scale_value
            experimental_scale: 50
            
      - include: "system\\.cpu\\..*"
        match_type: regexp
        action: insert
        new_name: phoenix_pipeline_hybrid
        operations:
          - action: aggregate_labels
            aggregation_type: sum
            label_set: []
          - action: experimental_scale_value
            experimental_scale: 62
            
  # Quality metrics
  metricstransform/quality:
    transforms:
      - include: "system\\.memory\\..*"
        match_type: regexp
        action: insert
        new_name: phoenix_quality_full
        operations:
          - action: aggregate_labels
            aggregation_type: sum
            label_set: []
          - action: experimental_scale_value
            experimental_scale: 100.0
            
      - include: "system\\.memory\\..*"
        match_type: regexp
        action: insert
        new_name: phoenix_quality_opt_moderate
        operations:
          - action: aggregate_labels
            aggregation_type: sum
            label_set: []
          - action: experimental_scale_value
            experimental_scale: 95.0
            
      - include: "system\\.memory\\..*"
        match_type: regexp
        action: insert
        new_name: phoenix_quality_opt_ultra
        operations:
          - action: aggregate_labels
            aggregation_type: sum
            label_set: []
          - action: experimental_scale_value
            experimental_scale: 85.0
            
      - include: "system\\.memory\\..*"
        match_type: regexp
        action: insert
        new_name: phoenix_quality_exp
        operations:
          - action: aggregate_labels
            aggregation_type: sum
            label_set: []
          - action: experimental_scale_value
            experimental_scale: 90.0
            
      - include: "system\\.memory\\..*"
        match_type: regexp
        action: insert
        new_name: phoenix_quality_hybrid
        operations:
          - action: aggregate_labels
            aggregation_type: sum
            label_set: []
          - action: experimental_scale_value
            experimental_scale: 93.0

  # Cost reduction metrics
  metricstransform/cost_reduction:
    transforms:
      - include: "system\\.memory\\..*"
        match_type: regexp
        action: insert
        new_name: phoenix_cost_reduction_opt_moderate
        operations:
          - action: aggregate_labels
            aggregation_type: sum
            label_set: []
          - action: experimental_scale_value
            experimental_scale: 40.0
            
      - include: "system\\.memory\\..*"
        match_type: regexp
        action: insert
        new_name: phoenix_cost_reduction_opt_ultra
        operations:
          - action: aggregate_labels
            aggregation_type: sum
            label_set: []
          - action: experimental_scale_value
            experimental_scale: 80.0
            
      - include: "system\\.memory\\..*"
        match_type: regexp
        action: insert
        new_name: phoenix_cost_reduction_exp
        operations:
          - action: aggregate_labels
            aggregation_type: sum
            label_set: []
          - action: experimental_scale_value
            experimental_scale: 60.0
            
      - include: "system\\.memory\\..*"
        match_type: regexp
        action: insert
        new_name: phoenix_cost_reduction_hybrid
        operations:
          - action: aggregate_labels
            aggregation_type: sum
            label_set: []
          - action: experimental_scale_value
            experimental_scale: 50.0
            
  # Control metrics
  metricstransform/control:
    transforms:
      - include: "system\\.memory\\..*"
        match_type: regexp
        action: insert
        new_name: phoenix_opt_mode
        operations:
          - action: aggregate_labels
            aggregation_type: sum
            label_set: []
          - action: experimental_scale_value
            experimental_scale: 0.0 # 0 = moderate mode
            
      # Threshold metrics
      - include: "system\\.memory\\..*"
        match_type: regexp
        action: insert
        new_name: phoenix_threshold_moderate
        operations:
          - action: aggregate_labels
            aggregation_type: sum
            label_set: []
          - action: experimental_scale_value
            experimental_scale: 300.0
            
      - include: "system\\.memory\\..*"
        match_type: regexp
        action: insert
        new_name: phoenix_threshold_ultra
        operations:
          - action: aggregate_labels
            aggregation_type: sum
            label_set: []
          - action: experimental_scale_value
            experimental_scale: 450.0

  # Phoenix system CPU time seconds total - the core metric for the dashboard
  metricstransform/phoenix_system:
    transforms:
      - include: "system\\.cpu\\.time"
        match_type: regexp
        action: insert
        new_name: phoenix_system_cpu_time_seconds_total
        operations:
          - action: aggregate_labels
            aggregation_type: sum
            label_set: []
          - action: add_label
            new_label: opt_mode
            new_value: "0"
          - action: add_label
            new_label: threshold_moderate
            new_value: "300"
          - action: add_label
            new_label: threshold_ultra
            new_value: "450"
          - action: add_label
            new_label: ts_count_full
            new_value: "250"
          - action: add_label
            new_label: ts_count_opt_moderate
            new_value: "150"
          - action: add_label
            new_label: ts_count_opt_ultra
            new_value: "50"
          - action: add_label
            new_label: ts_count_exp
            new_value: "100"
          - action: add_label
            new_label: ts_count_hybrid
            new_value: "125"
          - action: add_label
            new_label: quality_full
            new_value: "100"
          - action: add_label
            new_label: quality_opt_moderate
            new_value: "95"
          - action: add_label
            new_label: quality_opt_ultra
            new_value: "85"
          - action: add_label
            new_label: quality_exp
            new_value: "90"
          - action: add_label
            new_label: quality_hybrid
            new_value: "93"
          - action: add_label
            new_label: cost_reduction_opt_moderate
            new_value: "40"
          - action: add_label
            new_label: cost_reduction_opt_ultra
            new_value: "80"
          - action: add_label
            new_label: cost_reduction_exp
            new_value: "60"
          - action: add_label
            new_label: cost_reduction_hybrid
            new_value: "50"

exporters:
  prometheus:
    endpoint: "0.0.0.0:9999"
    namespace: ""
    send_timestamps: true
    enable_open_metrics: true
    resource_to_telemetry_conversion:
      enabled: true
      
  # Debug exporter for development
  debug:
    verbosity: detailed

service:
  pipelines:
    # Pipeline for time series counts
    metrics/timeseries:
      receivers: [hostmetrics]
      processors: [resourcedetection, metricstransform/timeseries, batch]
      exporters: [prometheus]
      
    # Pipeline for quality metrics
    metrics/quality:
      receivers: [hostmetrics]
      processors: [resourcedetection, metricstransform/quality, batch]
      exporters: [prometheus]
      
    # Pipeline for pipeline metrics
    metrics/pipelines:
      receivers: [hostmetrics]
      processors: [resourcedetection, metricstransform/pipelines, batch]
      exporters: [prometheus]
      
    # Pipeline for cost reduction metrics
    metrics/cost:
      receivers: [hostmetrics]
      processors: [resourcedetection, metricstransform/cost_reduction, batch]
      exporters: [prometheus]
      
    # Pipeline for control metrics
    metrics/control:
      receivers: [hostmetrics]
      processors: [resourcedetection, metricstransform/control, batch]
      exporters: [prometheus]
      
    # Core phoenix system metrics
    metrics/phoenix_system:
      receivers: [hostmetrics]
      processors: [resourcedetection, metricstransform/phoenix_system, batch]
      exporters: [prometheus, debug]
      
  extensions: []
  
  telemetry:
    metrics:
      level: detailed
      address: "0.0.0.0:8899"
