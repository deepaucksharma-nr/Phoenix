# Simplified Observer Collector Configuration
# Compatible with otel/opentelemetry-collector-contrib:0.103.0

receivers:
  # Scrape metrics from the main collector
  prometheus/main_collector:
    config:
      scrape_configs:
        - job_name: 'otelcol-main-metrics'
          scrape_interval: 10s
          static_configs:
            - targets: ['otelcol-main:8888']
  
  # OTLP receiver for metrics from main collector
  otlp/from_main_collector:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4319
      http:
        endpoint: 0.0.0.0:4320

  # Basic hostmetrics for observer self-monitoring
  hostmetrics/observer:
    collection_interval: 30s
    scrapers:
      cpu: {}
      memory: {}

processors:
  # Resource detection
  resourcedetection:
    detectors: [env]
    timeout: 2s
    
  # Add observer tags
  resource/observer:
    attributes:
      - key: service.name
        value: "phoenix-observer"
        action: insert
      - key: component.type
        value: "observer"
        action: insert
      - key: observer.instance
        value: "observer-main"
        action: insert
  
  # Simple cardinality monitoring processor
  transform/cardinality_monitor:
    metric_statements:
      - context: metric
        statements:
          - set(attributes["observer.monitored"], "true")
  
  batch:
    send_batch_size: 1000
    timeout: 10s

exporters:
  # Export observer metrics
  prometheus:
    endpoint: "0.0.0.0:8891"
    metric_expiration: 180m
    
  # Simple file exporter for control signals
  file/control_signal:
    path: "/control_out/opt_mode.yaml"
    
  debug:
    verbosity: basic

extensions:
  health_check:
    endpoint: 0.0.0.0:13133
    
  pprof:
    endpoint: 0.0.0.0:1777
    
  zpages:
    endpoint: 0.0.0.0:55679

service:
  extensions: [health_check, pprof, zpages]
  
  pipelines:
    # Main monitoring pipeline
    metrics/main:
      receivers: [prometheus/main_collector, otlp/from_main_collector]
      processors: [resourcedetection, resource/observer, transform/cardinality_monitor, batch]
      exporters: [prometheus, debug]
    
    # Observer self-monitoring
    metrics/self:
      receivers: [hostmetrics/observer]
      processors: [resourcedetection, resource/observer, batch]
      exporters: [prometheus]

  telemetry:
    logs:
      level: info
    metrics:
      address: 0.0.0.0:8892