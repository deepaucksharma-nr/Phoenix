apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "phoenix.fullname" . }}-pipeline-templates
  labels:
    {{- include "phoenix.labels" . | nindent 4 }}
    app.kubernetes.io/component: pipeline-templates
data:
  process-baseline-v1.yaml: |
    receivers:
      hostmetrics:
        collection_interval: 10s
        scrapers:
          process:
            include:
              match_type: regexp
              names: [".*"]
            mute_process_name_error: true
            mute_process_exe_error: true
    
    processors:
      memory_limiter:
        check_interval: 1s
        limit_mib: 400
        spike_limit_mib: 100
      
      batch:
        timeout: 30s
        send_batch_size: 1000
    
    exporters:
      otlphttp/newrelic:
        endpoint: "${NEW_RELIC_OTLP_ENDPOINT}"
        headers:
          api-key: "${NEW_RELIC_API_KEY}"
        compression: gzip
      
      prometheus:
        endpoint: "0.0.0.0:8888"
        const_labels:
          phoenix_pipeline: "baseline"
    
    service:
      pipelines:
        metrics:
          receivers: [hostmetrics]
          processors: [memory_limiter, batch]
          exporters: [otlphttp/newrelic, prometheus]
  
  process-priority-filter-v1.yaml: |
    receivers:
      hostmetrics:
        collection_interval: 10s
        scrapers:
          process:
            include:
              match_type: regexp
              names: [".*"]
            mute_process_name_error: true
            mute_process_exe_error: true
    
    processors:
      memory_limiter:
        check_interval: 1s
        limit_mib: 400
        spike_limit_mib: 100
      
      transform/classify:
        error_mode: ignore
        metric_statements:
          - context: metric
            statements:
              - set(attributes["process.priority"], "critical") where IsMatch(name, "system.process.*") and IsMatch(attributes["process.executable.name"], "^(systemd|kubelet|containerd|dockerd|kernel|init)$")
              - set(attributes["process.priority"], "high") where IsMatch(name, "system.process.*") and IsMatch(attributes["process.executable.name"], "^(nginx|apache|mysql|postgres|redis|etcd)$")
              - set(attributes["process.priority"], "medium") where IsMatch(name, "system.process.*") and IsMatch(attributes["process.executable.name"], "^(node|python|java|ruby|go)$")
              - set(attributes["process.priority"], "low") where IsMatch(name, "system.process.*") and attributes["process.priority"] == nil
      
      filter/priority:
        error_mode: ignore
        metrics:
          metric:
            - attributes["process.priority"] == "low" and resource.attributes["process.cpu.utilization"] < 0.01 and resource.attributes["process.memory.utilization"] < 0.01
      
      batch:
        timeout: 30s
        send_batch_size: 1000
    
    exporters:
      otlphttp/newrelic:
        endpoint: "${NEW_RELIC_OTLP_ENDPOINT}"
        headers:
          api-key: "${NEW_RELIC_API_KEY}"
        compression: gzip
      
      prometheus:
        endpoint: "0.0.0.0:8888"
        const_labels:
          phoenix_pipeline: "priority-filter"
    
    service:
      pipelines:
        metrics:
          receivers: [hostmetrics]
          processors: [memory_limiter, transform/classify, filter/priority, batch]
          exporters: [otlphttp/newrelic, prometheus]
  
  process-aggregated-v1.yaml: |
    receivers:
      hostmetrics:
        collection_interval: 10s
        scrapers:
          process:
            include:
              match_type: regexp
              names: [".*"]
            mute_process_name_error: true
            mute_process_exe_error: true
    
    processors:
      memory_limiter:
        check_interval: 1s
        limit_mib: 400
        spike_limit_mib: 100
      
      transform/normalize:
        error_mode: ignore
        metric_statements:
          - context: metric
            statements:
              - set(attributes["process.group"], attributes["process.executable.name"])
              - set(attributes["process.group"], "chrome") where IsMatch(attributes["process.executable.name"], "^(chrome|chromium|Chrome Helper).*")
              - set(attributes["process.group"], "firefox") where IsMatch(attributes["process.executable.name"], "^(firefox|Firefox).*")
              - set(attributes["process.group"], "system") where IsMatch(attributes["process.executable.name"], "^(kernel_task|systemd-.*|kworker.*)")
      
      groupbyattrs/aggregate:
        keys:
          - process.group
          - host.name
        
      batch:
        timeout: 30s
        send_batch_size: 1000
    
    exporters:
      otlphttp/newrelic:
        endpoint: "${NEW_RELIC_OTLP_ENDPOINT}"
        headers:
          api-key: "${NEW_RELIC_API_KEY}"
        compression: gzip
      
      prometheus:
        endpoint: "0.0.0.0:8888"
        const_labels:
          phoenix_pipeline: "aggregated"
    
    service:
      pipelines:
        metrics:
          receivers: [hostmetrics]
          processors: [memory_limiter, transform/normalize, groupbyattrs/aggregate, batch]
          exporters: [otlphttp/newrelic, prometheus]