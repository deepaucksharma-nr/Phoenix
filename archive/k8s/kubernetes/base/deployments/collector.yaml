apiVersion: apps/v1
kind: Deployment
metadata:
  name: phoenix-collector
  namespace: phoenix-system
  labels:
    app.kubernetes.io/name: phoenix-collector
    app.kubernetes.io/component: collector
    app.kubernetes.io/part-of: phoenix-vnext
spec:
  replicas: 3  # HA setup
  selector:
    matchLabels:
      app.kubernetes.io/name: phoenix-collector
  template:
    metadata:
      labels:
        app.kubernetes.io/name: phoenix-collector
        app.kubernetes.io/component: collector
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8888"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: phoenix-collector
      containers:
      - name: collector
        image: otel/opentelemetry-collector-contrib:0.91.0
        command: ["--config=/etc/otel/config.yaml"]
        ports:
        - name: otlp-grpc
          containerPort: 4317
          protocol: TCP
        - name: otlp-http
          containerPort: 4318
          protocol: TCP
        - name: metrics-full
          containerPort: 8888
          protocol: TCP
        - name: metrics-opt
          containerPort: 8889
          protocol: TCP
        - name: metrics-exp
          containerPort: 8890
          protocol: TCP
        - name: metrics-obs
          containerPort: 8891
          protocol: TCP
        - name: health
          containerPort: 13133
          protocol: TCP
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "2000m"
        env:
        - name: OTEL_RESOURCE_ATTRIBUTES
          value: "service.name=phoenix-collector,service.namespace=phoenix-system"
        - name: GOGC
          value: "80"
        - name: MEMORY_LIMIT_MIB
          valueFrom:
            resourceFieldRef:
              resource: limits.memory
              divisor: "1Mi"
        volumeMounts:
        - name: config
          mountPath: /etc/otel
        - name: control-signals
          mountPath: /etc/phoenix/control
        livenessProbe:
          httpGet:
            path: /
            port: health
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /
            port: health
          initialDelaySeconds: 10
          periodSeconds: 10
      volumes:
      - name: config
        configMap:
          name: phoenix-collector-config
      - name: control-signals
        persistentVolumeClaim:
          claimName: phoenix-control-signals
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: phoenix-collector
  namespace: phoenix-system
  labels:
    app.kubernetes.io/name: phoenix-collector
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: phoenix-collector
  labels:
    app.kubernetes.io/name: phoenix-collector
rules:
- apiGroups: [""]
  resources: ["nodes", "nodes/metrics", "services", "endpoints", "pods"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: phoenix-collector
  labels:
    app.kubernetes.io/name: phoenix-collector
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: phoenix-collector
subjects:
- kind: ServiceAccount
  name: phoenix-collector
  namespace: phoenix-system