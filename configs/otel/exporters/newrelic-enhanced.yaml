# Enhanced New Relic OTLP Exporter Configuration
exporters:
  otlp/newrelic_full:
    endpoint: ${env:NEW_RELIC_OTLP_ENDPOINT}
    headers:
      api-key: ${env:NEW_RELIC_LICENSE_KEY}
    compression: gzip
    retry_on_failure:
      enabled: true
      initial_interval: 5s
      max_interval: 30s
      max_elapsed_time: 300s
    sending_queue:
      enabled: true
      num_consumers: 10
      queue_size: 5000
    timeout: 30s

  otlp/newrelic_optimized:
    endpoint: ${env:NEW_RELIC_OTLP_ENDPOINT}
    headers:
      api-key: ${env:NEW_RELIC_LICENSE_KEY}
    compression: gzip
    retry_on_failure:
      enabled: true
      initial_interval: 5s
      max_interval: 30s
      max_elapsed_time: 300s
    sending_queue:
      enabled: true
      num_consumers: 5
      queue_size: 2000
    timeout: 30s

  otlp/newrelic_experimental:
    endpoint: ${env:NEW_RELIC_OTLP_ENDPOINT}
    headers:
      api-key: ${env:NEW_RELIC_LICENSE_KEY}
    compression: gzip
    retry_on_failure:
      enabled: true
      initial_interval: 10s
      max_interval: 60s
      max_elapsed_time: 600s
    sending_queue:
      enabled: true
      num_consumers: 2
      queue_size: 500
    timeout: 30s

# New Relic specific processors for enrichment
processors:
  attributes/newrelic:
    actions:
      - key: service.name
        from_attribute: service_name
        action: upsert
      - key: deployment.environment
        value: ${env:DEPLOYMENT_ENVIRONMENT}
        action: upsert
      - key: phoenix.pipeline
        from_attribute: pipeline.name
        action: upsert
      - key: phoenix.optimization_mode
        value: ${env:OPTIMIZATION_MODE}
        action: upsert
      - key: phoenix.version
        value: ${env:PHOENIX_VERSION}
        action: upsert
        
  resource/newrelic:
    attributes:
      - key: telemetry.sdk.name
        value: "opentelemetry"
        action: upsert
      - key: telemetry.sdk.language
        value: "go"
        action: upsert
      - key: telemetry.sdk.version
        value: "1.21.0"
        action: upsert
        
  transform/newrelic:
    metric_statements:
      - context: datapoint
        statements:
          # Add New Relic specific attributes
          - set(attributes["newrelic.source"], "phoenix-vnext")
          - set(attributes["newrelic.pipeline.type"], attributes["pipeline"])
          
      - context: metric
        statements:
          # Convert gauge to summary for better New Relic compatibility
          - set(type, "Summary") where type == "Gauge"
          
  filter/newrelic:
    metrics:
      # Filter out internal collector metrics for cost optimization
      exclude:
        match_type: regexp
        metric_names:
          - "^otelcol_.*"
          - "^prometheus_.*"
          - "^go_.*"
      # Include only phoenix specific metrics
      include:
        match_type: regexp
        metric_names:
          - "^phoenix.*"
          - "^system.*"
          - "^container.*"