# Phoenix-vNext Development Docker Compose Override
# Use with: docker-compose -f docker-compose.yaml -f docker-compose.dev.yml up

version: '3.8'

services:
  # Development overrides for main collector
  otelcol-main:
    environment:
      - OTEL_LOG_LEVEL=debug
      - OTELCOL_MAIN_MEMORY_LIMIT_MIB=2048  # More memory for dev
    volumes:
      - ./configs:/etc/otelcol/configs:ro
      - ./data/otelcol_main:/data
    ports:
      - "1777:1777"  # pprof endpoint for profiling
    healthcheck:
      interval: 10s  # Faster checks in dev

  # Development overrides for observer
  otelcol-observer:
    environment:
      - OTEL_LOG_LEVEL=debug
    volumes:
      - ./configs:/etc/otelcol/configs:ro
    ports:
      - "1778:1777"  # pprof endpoint for observer
    healthcheck:
      interval: 10s

  # Development overrides for control actuator
  control-actuator-go:
    environment:
      - LOG_LEVEL=debug
      - ADAPTIVE_CONTROLLER_INTERVAL_SECONDS=30  # Faster updates in dev
    volumes:
      - ./apps/control-actuator-go:/app:cached
      - ./configs/control:/configs/control

  # Development overrides for anomaly detector
  anomaly-detector:
    environment:
      - LOG_LEVEL=debug
    volumes:
      - ./apps/anomaly-detector:/app:cached

  # Development overrides for benchmark controller
  benchmark-controller:
    environment:
      - LOG_LEVEL=debug
    volumes:
      - ./services/benchmark:/app:cached

  # Prometheus with development settings
  prometheus:
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=7d'  # Shorter retention for dev
      - '--web.enable-lifecycle'
      - '--log.level=debug'
    volumes:
      - ./configs/monitoring/prometheus:/etc/prometheus:ro
      - ./data/prometheus:/prometheus

  # Grafana with development plugins
  grafana:
    environment:
      - GF_LOG_LEVEL=debug
      - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-worldmap-panel
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=true
    volumes:
      - ./configs/monitoring/grafana:/etc/grafana/provisioning:ro
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro
      - ./data/grafana:/var/lib/grafana

  # Synthetic load generator for testing
  synthetic-metrics-generator:
    environment:
      - SYNTHETIC_PROCESS_COUNT_PER_HOST=50  # Lighter load for dev
      - SYNTHETIC_HOST_COUNT=2
      - SYNTHETIC_METRIC_EMIT_INTERVAL_S=10  # More frequent for faster feedback

# Development volumes with better performance
volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local