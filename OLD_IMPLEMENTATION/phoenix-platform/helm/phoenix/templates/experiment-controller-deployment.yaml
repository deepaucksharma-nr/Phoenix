apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "phoenix.fullname" . }}-experiment-controller
  labels:
    {{- include "phoenix.labels" . | nindent 4 }}
    app.kubernetes.io/component: experiment-controller
spec:
  replicas: {{ .Values.experimentController.replicaCount }}
  selector:
    matchLabels:
      {{- include "phoenix.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: experiment-controller
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/experiment-controller-configmap.yaml") . | sha256sum }}
      labels:
        {{- include "phoenix.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: experiment-controller
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "phoenix.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: controller
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.experimentController.image.repository }}:{{ .Values.experimentController.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.experimentController.image.pullPolicy }}
          ports:
            - name: grpc
              containerPort: 5051
              protocol: TCP
            - name: http
              containerPort: 8081
              protocol: TCP
            - name: metrics
              containerPort: 9091
              protocol: TCP
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ include "phoenix.fullname" . }}-postgresql
                  key: database-url
            - name: API_SERVICE_URL
              value: "{{ include "phoenix.fullname" . }}-api:{{ .Values.api.service.grpcPort }}"
            - name: GENERATOR_SERVICE_URL
              value: "{{ include "phoenix.fullname" . }}-generator:{{ .Values.generator.service.httpPort }}"
            - name: PROMETHEUS_URL
              value: "http://{{ .Release.Name }}-prometheus-server"
            - name: RECONCILE_INTERVAL
              value: {{ .Values.experimentController.reconcileInterval | default "1m" }}
            - name: LOG_LEVEL
              value: {{ .Values.experimentController.logLevel | default "info" }}
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
          resources:
            {{- toYaml .Values.experimentController.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /etc/phoenix
              readOnly: true
      volumes:
        - name: config
          configMap:
            name: {{ include "phoenix.fullname" . }}-experiment-controller
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}