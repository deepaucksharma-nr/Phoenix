version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: phoenix
      POSTGRES_USER: phoenix
      POSTGRES_PASSWORD: phoenix
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U phoenix"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Experiment Controller
  experiment-controller:
    build:
      context: .
      dockerfile: docker/controller/Dockerfile
    environment:
      DATABASE_URL: postgres://phoenix:phoenix@postgres/phoenix?sslmode=disable
      GRPC_PORT: :50051
      HTTP_PORT: :8081
      LOG_LEVEL: debug
    ports:
      - "50051:50051"  # gRPC
      - "8081:8081"    # Metrics
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8081/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Config Generator
  config-generator:
    build:
      context: .
      dockerfile: docker/generator/Dockerfile
    environment:
      HTTP_PORT: :8082
      TEMPLATES_PATH: /app/pipelines/templates
      LOG_LEVEL: debug
    ports:
      - "8082:8082"
    volumes:
      - ./pipelines/templates:/app/pipelines/templates:ro
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8082/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Dashboard (optional for dev)
  dashboard:
    build:
      context: .
      dockerfile: docker/dashboard/Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - experiment-controller
      - config-generator
    environment:
      VITE_API_URL: http://localhost:50051
      VITE_GENERATOR_URL: http://localhost:8082
    profiles:
      - with-ui

  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./configs/monitoring/prometheus/prometheus.yaml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    depends_on:
      - experiment-controller
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Grafana
  grafana:
    image: grafana/grafana:latest
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_SECURITY_ADMIN_USER: admin
    volumes:
      - ./configs/monitoring/grafana/dashboards:/var/lib/grafana/dashboards
      - ./configs/monitoring/grafana/dashboards_provider.yaml:/etc/grafana/provisioning/dashboards/phoenix.yaml
      - ./configs/monitoring/grafana/grafana-datasource.yaml:/etc/grafana/provisioning/datasources/prometheus.yaml
      - grafana_data:/var/lib/grafana
    ports:
      - "3001:3000"
    depends_on:
      - prometheus
    profiles:
      - monitoring

  # Process Simulator (for testing)
  simulator:
    build:
      context: .
      dockerfile: docker/simulator/Dockerfile
    environment:
      PROFILE: realistic
      DURATION: 1h
      PROCESS_COUNT: 100
    profiles:
      - simulation

volumes:
  postgres_data:
  prometheus_data:
  grafana_data:

networks:
  default:
    name: phoenix-dev-network