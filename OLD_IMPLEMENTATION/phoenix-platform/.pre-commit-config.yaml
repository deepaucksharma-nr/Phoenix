# Phoenix Platform Pre-commit Configuration
# Enforces code quality and governance rules before commits

repos:
  # Go formatting and linting
  - repo: local
    hooks:
      - id: go-fmt
        name: Go Format
        entry: gofmt -l -w
        language: system
        types: [go]
        pass_filenames: true
        
      - id: go-imports
        name: Go Imports
        entry: goimports -l -w
        language: system
        types: [go]
        pass_filenames: true
        
      - id: go-vet
        name: Go Vet
        entry: go vet
        language: system
        types: [go]
        pass_filenames: false
        
      - id: golangci-lint
        name: GolangCI Lint
        entry: golangci-lint run --fix
        language: system
        types: [go]
        pass_filenames: false
        
      - id: go-mod-tidy
        name: Go Mod Tidy
        entry: go mod tidy
        language: system
        pass_filenames: false
        files: go.mod|go.sum
        
  # Frontend formatting and linting
  - repo: local
    hooks:
      - id: prettier
        name: Prettier
        entry: bash -c "cd dashboard && npm run format"
        language: system
        files: ^dashboard/.*\.(js|jsx|ts|tsx|json|css|scss|md)$
        pass_filenames: false
        
      - id: eslint
        name: ESLint
        entry: bash -c "cd dashboard && npm run lint"
        language: system
        files: ^dashboard/.*\.(js|jsx|ts|tsx)$
        pass_filenames: false
        
  # YAML linting
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.33.0
    hooks:
      - id: yamllint
        args: [-c=.yamllint.yml]
        
  # Markdown linting
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.37.0
    hooks:
      - id: markdownlint
        args: [--config=.markdownlint.yml]
        
  # Structure validation
  - repo: local
    hooks:
      - id: validate-structure
        name: Validate Mono-repo Structure
        entry: make validate-structure
        language: system
        pass_filenames: false
        always_run: true
        
      - id: validate-imports
        name: Validate Go Imports
        entry: make validate-imports
        language: system
        types: [go]
        pass_filenames: false
        
  # Commit message linting
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.13.0
    hooks:
      - id: commitizen
        stages: [commit-msg]
        
  # Security scanning
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        
  # File size check
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: check-yaml
      - id: end-of-file-fixer
      - id: trailing-whitespace
      - id: mixed-line-ending
        
  # Documentation checks
  - repo: local
    hooks:
      - id: check-docs
        name: Check Documentation
        entry: bash -c "test -f README.md && test -d docs/"
        language: system
        pass_filenames: false
        always_run: true